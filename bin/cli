#! /usr/bin/env node
var path = require('path');
var fs = require('fs');
var mkdirp = require('mkdirp');
var debug = require('debug')('loopback-component-migrate');


/**
 * Command line implementation for loopback-component-migrate.
 *
 * Common usage case is:
 *
 * ./node_modules/.bin/loopback-component-migrate create|up|down
 */
var program = require('commander');

program
  .version(require(path.join(__dirname, '..', './package.json')).version)
  .option('-d, --migrations-dir <path>', 'set migrations directory. defaults to ./migrations')
  .option('-s, --server <path>', 'set server path. defaults to ./server/server.js')
  .option('-t, --to <filename>', 'define a target file for migration and rollback');

program
  .command('create [name]')
  .description('create a new migration script')
  .action(function(name, options){

    function stringifyAndPadLeading(num) {
        var str = num + '';
        return (str.length === 1) ? '0' + str : str;
    }

    function generateFileName(name) {
      var d = new Date(),
          year = d.getFullYear() + '',
          month = stringifyAndPadLeading(d.getMonth()+1),
          day = stringifyAndPadLeading(d.getDate()),
          hours = stringifyAndPadLeading(d.getHours()),
          minutes = stringifyAndPadLeading(d.getMinutes()),
          seconds = stringifyAndPadLeading(d.getSeconds()),
          dateString = year + month + day + hours +  minutes + seconds,
          fileName = dateString + (name ? '-' + name : '') + '.js';
      return fileName;
    }

    function getMigrationsDir () {
      var dir = path.join(process.cwd(), 'migrations');
      debug('Using migrations directory: %s', dir);
      return dir;
    }

    function ensureDirectory (dir) {
      debug('Preparing migrations directory: %s', dir);
      mkdirp.sync(dir);
    }

    function writeFile (fileName, contents) {
      debug('Creating migration script: %s', fileName);
      var migrationsDir = getMigrationsDir();
      ensureDirectory(migrationsDir);
      var filePath = path.join(migrationsDir, fileName);
      fs.writeFileSync(filePath, contents);
    }

    // Create the migration file.
    var fileName = generateFileName(name);
    var migrationsDir = path.join(process.cwd(), 'migrations');
    console.log('Creating migration script %s in %s', fileName, migrationsDir);

    var filePath = path.join(migrationsDir,fileName);
    var fileContent = fs.readFileSync(path.join(__dirname, '..', 'migration-skeleton.js'));
    writeFile(fileName, fileContent);
  });

program
  .command('migrate')
  .description('Migrate to the given migration')
  .action(function(options){

    // Get app module
    var server = program.server || process.cwd() + '/server/server.js';
    var app = require(path.resolve(process.cwd(), server));

    // Migrate Up
    app.models.Migration.migrate('up', program.to || null , function(err){
      process.exit();
    });

  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ migrate');
    console.log('    $ migrate -t 005');
    console.log('    $ migrate --to 005');
    console.log();
  });

program
  .command('rollback')
  .description('Rollback to the given migration')
  .action(function(options){

    // Get app modulecon
    var server = program.server || process.cwd() + '/server/server.js';
    var app = require(path.resolve(process.cwd(), server));

    // Rollback
    app.models.Migration.migrate('down', program.to || null , function(err){
      process.exit();
    });

  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ rollback');
    console.log('    $ rollback -t 001');
    console.log('    $ rollback --to 001');
    console.log();
  });

program.parse(process.argv);
